{"version":3,"file":"web-utils.js","sourceRoot":"","sources":["../../src/web-utils.ts"],"names":[],"mappings":"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","sourcesContent":["import type { OAuth2AuthenticateOptions } from './definitions';\n// import sha256 from \"fast-sha256\";\n\nexport class WebUtils {\n  /**\n   * Public only for testing\n   */\n  static getAppId(options: OAuth2AuthenticateOptions): string {\n    return this.getOverwritableValue(options, 'appId');\n  }\n\n  static getOverwritableValue<T>(\n    options: OAuth2AuthenticateOptions | any,\n    key: string,\n  ): T {\n    let base = options[key];\n    if (options.web && key in options.web) {\n      base = options.web[key];\n    }\n    return base;\n  }\n\n  /**\n   * Public only for testing\n   */\n  static getAuthorizationUrl(options: WebOptions): string {\n    let url = options.authorizationBaseUrl + '?client_id=' + options.appId;\n    url += '&response_type=' + options.responseType;\n\n    if (options.redirectUrl) {\n      url += '&redirect_uri=' + options.redirectUrl;\n    }\n    if (options.scope) {\n      url += '&scope=' + options.scope;\n    }\n    url += '&state=' + options.state;\n\n    if (options.additionalParameters) {\n      for (const key in options.additionalParameters) {\n        url += '&' + key + '=' + options.additionalParameters[key];\n      }\n    }\n\n    if (options.pkceCodeChallenge) {\n      url += '&code_challenge=' + options.pkceCodeChallenge;\n      url += '&code_challenge_method=' + options.pkceCodeChallengeMethod;\n    }\n    return encodeURI(url);\n  }\n\n  static getTokenEndpointData(options: WebOptions, code: string): string {\n    let body = '';\n    body +=\n      encodeURIComponent('grant_type') +\n      '=' +\n      encodeURIComponent('authorization_code') +\n      '&';\n    body +=\n      encodeURIComponent('client_id') +\n      '=' +\n      encodeURIComponent(options.appId) +\n      '&';\n    body +=\n      encodeURIComponent('redirect_uri') +\n      '=' +\n      encodeURIComponent(options.redirectUrl) +\n      '&';\n    body += encodeURIComponent('code') + '=' + encodeURIComponent(code) + '&';\n    body +=\n      encodeURIComponent('code_verifier') +\n      '=' +\n      encodeURIComponent(options.pkceCodeVerifier);\n    return body;\n  }\n\n  static setCodeVerifier(code: string): boolean {\n    try {\n      window.sessionStorage.setItem(`I_Capacitor_GenericOAuth2Plugin_PKCE`, code);\n      return true;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  static clearCodeVerifier(): void {\n    window.sessionStorage.removeItem(`I_Capacitor_GenericOAuth2Plugin_PKCE`);\n  }\n\n  static getCodeVerifier(): string | null {\n    return window.sessionStorage.getItem(`I_Capacitor_GenericOAuth2Plugin_PKCE`);\n  }\n\n  /**\n   * Public only for testing\n   */\n  static getUrlParams(url: string): { [x: string]: string } | undefined {\n    const urlString = `${url ?? ''}`.trim();\n\n    if (urlString.length === 0) {\n      return;\n    }\n\n    const parsedUrl = new URL(urlString);\n    if (!parsedUrl.search && !parsedUrl.hash) {\n      return;\n    }\n\n    let urlParamStr;\n    if (parsedUrl.search) {\n      urlParamStr = parsedUrl.search.substr(1);\n    } else {\n      urlParamStr = parsedUrl.hash.substr(1);\n    }\n\n    const keyValuePairs: string[] = urlParamStr.split(`&`);\n    return keyValuePairs.reduce<{ [x: string]: string } | undefined>(\n      (accumulator, currentValue) => {\n        const [key, val] = currentValue.split(`=`);\n        if (key && key.length > 0) {\n          return {\n            ...accumulator,\n            [key]: decodeURIComponent(val),\n          };\n        }\n      },\n      {},\n    );\n  }\n\n  static randomString(length = 10): string {\n    const haystack =\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_';\n    let randomStr;\n    if (window.crypto) {\n      let numberArray: Uint32Array = new Uint32Array(length);\n      window.crypto.getRandomValues(numberArray);\n      numberArray = numberArray.map(x =>\n        haystack.charCodeAt(x % haystack.length),\n      );\n\n      const stringArray: string[] = [];\n      numberArray.forEach(x => {\n        stringArray.push(haystack.charAt(x % haystack.length));\n      });\n      randomStr = stringArray.join('');\n    } else {\n      randomStr = '';\n      for (let i = 0; i < length; i++) {\n        randomStr += haystack.charAt(\n          Math.floor(Math.random() * haystack.length),\n        );\n      }\n    }\n    return randomStr;\n  }\n\n  static async buildWebOptions(\n    configOptions: OAuth2AuthenticateOptions,\n  ): Promise<WebOptions> {\n    const webOptions = new WebOptions();\n    webOptions.appId = this.getAppId(configOptions);\n    webOptions.authorizationBaseUrl = this.getOverwritableValue(\n      configOptions,\n      'authorizationBaseUrl',\n    );\n    webOptions.responseType = this.getOverwritableValue(\n      configOptions,\n      'responseType',\n    );\n    if (!webOptions.responseType) {\n      webOptions.responseType = 'token';\n    }\n    webOptions.redirectUrl = this.getOverwritableValue(\n      configOptions,\n      'redirectUrl',\n    );\n    // controlling parameters\n    webOptions.resourceUrl = this.getOverwritableValue(\n      configOptions,\n      'resourceUrl',\n    );\n    webOptions.accessTokenEndpoint = this.getOverwritableValue(\n      configOptions,\n      'accessTokenEndpoint',\n    );\n\n    webOptions.pkceEnabled = this.getOverwritableValue(\n      configOptions,\n      'pkceEnabled',\n    );\n    webOptions.sendCacheControlHeader =\n      this.getOverwritableValue(configOptions, 'sendCacheControlHeader') ??\n      webOptions.sendCacheControlHeader;\n    if (webOptions.pkceEnabled) {\n      const pkceCode = this.getCodeVerifier();\n      if (pkceCode) {\n        webOptions.pkceCodeVerifier = pkceCode;\n      } else {\n        webOptions.pkceCodeVerifier = this.randomString(64);\n        this.setCodeVerifier(webOptions.pkceCodeVerifier);\n      }\n      if (CryptoUtils.HAS_SUBTLE_CRYPTO) {\n        await CryptoUtils.deriveChallenge(webOptions.pkceCodeVerifier).then(\n          c => {\n            webOptions.pkceCodeChallenge = c;\n            webOptions.pkceCodeChallengeMethod = 'S256';\n          },\n        );\n      } else {\n        webOptions.pkceCodeChallenge = webOptions.pkceCodeVerifier;\n        webOptions.pkceCodeChallengeMethod = 'plain';\n      }\n    }\n    webOptions.scope = this.getOverwritableValue(configOptions, 'scope');\n    webOptions.state = this.getOverwritableValue(configOptions, 'state');\n    if (!webOptions.state || webOptions.state.length === 0) {\n      webOptions.state = this.randomString(20);\n    }\n    const parametersMapHelper = this.getOverwritableValue<{\n      [key: string]: string;\n    }>(configOptions, 'additionalParameters');\n    if (parametersMapHelper) {\n      webOptions.additionalParameters = {};\n      for (const key in parametersMapHelper) {\n        if (key && key.trim().length > 0) {\n          const value = parametersMapHelper[key];\n          if (value && value.trim().length > 0) {\n            webOptions.additionalParameters[key] = value;\n          }\n        }\n      }\n    }\n    const headersMapHelper = this.getOverwritableValue<{\n      [key: string]: string;\n    }>(configOptions, 'additionalResourceHeaders');\n    if (headersMapHelper) {\n      webOptions.additionalResourceHeaders = {};\n      for (const key in headersMapHelper) {\n        if (key && key.trim().length > 0) {\n          const value = headersMapHelper[key];\n          if (value && value.trim().length > 0) {\n            webOptions.additionalResourceHeaders[key] = value;\n          }\n        }\n      }\n    }\n    webOptions.logsEnabled = this.getOverwritableValue(\n      configOptions,\n      'logsEnabled',\n    );\n\n    return webOptions;\n  }\n\n  static buildWindowOptions(\n    configOptions: OAuth2AuthenticateOptions,\n  ): WebOptions {\n    const windowOptions = new WebOptions();\n    if (configOptions.web) {\n      if (configOptions.web.windowOptions) {\n        windowOptions.windowOptions = configOptions.web.windowOptions;\n      }\n      if (configOptions.web.windowTarget) {\n        windowOptions.windowTarget = configOptions.web.windowTarget;\n      }\n    }\n    return windowOptions;\n  }\n}\n\nexport class CryptoUtils {\n  static BASE64_CHARS =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  static HAS_SUBTLE_CRYPTO: boolean =\n    typeof window !== 'undefined' &&\n    !!(window.crypto as any) &&\n    !!(window.crypto.subtle as any);\n\n  static toUint8Array(str: string): Uint8Array {\n    const buf = new ArrayBuffer(str.length);\n    const bufView = new Uint8Array(buf);\n\n    for (let i = 0; i < str.length; i++) {\n      bufView[i] = str.charCodeAt(i);\n    }\n    return bufView;\n  }\n\n  static toBase64Url(base64: string): string {\n    return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n  }\n\n  static toBase64(bytes: Uint8Array): string {\n    const len = bytes.length;\n    let base64 = '';\n    for (let i = 0; i < len; i += 3) {\n      base64 += this.BASE64_CHARS[bytes[i] >> 2];\n      base64 += this.BASE64_CHARS[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 +=\n        this.BASE64_CHARS[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += this.BASE64_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (len % 3 === 2) {\n      base64 = base64.substring(0, base64.length - 1) + '=';\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n  }\n\n  static deriveChallenge(codeVerifier: string): Promise<string> {\n    if (codeVerifier.length < 43 || codeVerifier.length > 128) {\n      return Promise.reject(new Error('ERR_PKCE_CODE_VERIFIER_INVALID_LENGTH'));\n    }\n    if (!CryptoUtils.HAS_SUBTLE_CRYPTO) {\n      return Promise.reject(new Error('ERR_PKCE_CRYPTO_NOTSUPPORTED'));\n    }\n\n    return new Promise((resolve, reject) => {\n      crypto.subtle.digest('SHA-256', this.toUint8Array(codeVerifier)).then(\n        arrayBuffer => {\n          return resolve(\n            this.toBase64Url(this.toBase64(new Uint8Array(arrayBuffer))),\n          );\n        },\n        error => reject(error),\n      );\n    });\n  }\n}\n\nexport class WebOptions {\n  appId: string;\n  authorizationBaseUrl: string;\n  accessTokenEndpoint: string;\n  resourceUrl: string;\n  responseType: string;\n  scope: string;\n  sendCacheControlHeader = true;\n  state: string;\n  redirectUrl: string;\n  logsEnabled: boolean;\n  windowOptions: string;\n  windowTarget = '_blank';\n\n  pkceEnabled: boolean;\n  pkceCodeVerifier: string;\n  pkceCodeChallenge: string;\n  pkceCodeChallengeMethod: string;\n\n  additionalParameters: { [key: string]: string };\n  additionalResourceHeaders: { [key: string]: string };\n}\n"]}